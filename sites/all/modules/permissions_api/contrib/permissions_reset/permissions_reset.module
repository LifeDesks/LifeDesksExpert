<?php
// $Id: permissions_reset.module,v 1.1.2.2 2010/03/26 12:47:27 ebeyrent Exp $

/**
 * @file
 * Provides functions for resetting permissions on the permission page.
 */

function permissions_reset_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'user_admin_perm') {
    $form['#prefix'] = drupal_get_form('permissions_reset_settings_form');
  }
}

function permissions_reset_settings_form() {
  drupal_add_css(drupal_get_path('module', 'permissions_reset') .'/permissions_reset.css');
    
  $roles = drupal_map_assoc(array_values(user_roles()));
  $module_options = array();
  foreach (module_list(FALSE, FALSE, TRUE) as $module) {
    if (module_invoke($module, 'perm')) {
      $module_options[$module] = $module;
    }
  }
  $form['reset'] = array(
    '#type' => 'fieldset',
    '#title' => t('Reset Permissions'),
    '#description' => t('Reset the permissions below in one step. Choose modules and roles and grant or revoke all permissions for those modules and roles.'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#attributes' => array('class' => 'permissions-reset'),
    );
  $form['reset']['modules'] = array(
    '#type' => 'select',
    '#title' => t('Modules'),
    '#options' => $module_options,
    '#multiple' => TRUE,
    );  
  $form['reset']['grant'] = array(
    '#type' => 'select',
    '#title' => t('Grant all'),
    '#options' => $roles,
    '#multiple' => TRUE,
    );
  $form['reset']['revoke'] = array(
    '#type' => 'select',
    '#title' => t('Revoke all'),
    '#options' => $roles,
    '#multiple' => TRUE,
    );    
  $form['reset']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
    );
  return $form;
}

function permissions_reset_settings_form_submit($form, &$form_state) {
  $modules = $form_state['values']['modules'];
  foreach ($modules as $module) {
    $grant = $form_state['values']['grant'];
    foreach ($grant as $role) {
      permissions_grant_all_permissions_by_module($role, $module);
    }
    $revoke = $form_state['values']['revoke'];
    foreach ($revoke as $role) {
      permissions_revoke_all_permissions_by_module($role, $module);
    }
  }  
}