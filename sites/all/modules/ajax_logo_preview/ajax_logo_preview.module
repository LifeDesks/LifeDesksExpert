<?php

/**
 * Implementation of hook_menu
 */
function ajax_logo_preview_menu() {
  $items['admin/settings/logo_preview'] = array(
    'title' => 'Logo settings',
    'description' => t('Configure default behavior of the site logo.'),
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ajax_logo_preview_admin_settings'),
    'access arguments' => array('administer themes'),
    'file' => 'ajax_logo_preview.admin.inc'
  );
  return $items;
}

/**
 * Implementation of hook_form_alter
 */
function ajax_logo_preview_form_alter(&$form, $form_state, $form_id) {

  if($form_id == 'system_theme_settings') {
	
	$form['theme_settings']['toggle_name']['#description'] = t('Uncheck this if you wish to upload a full banner image.');

    $logo_dimensions = variable_get("ajax_logo_picture_dimensions", "300x89");
    $banner_dimensions = variable_get('ajax_logo_dimensions_nositename', '983x89');
    $form['logo']['logo_upload']['#title'] = t('Upload logo or full banner image');
    $form['logo']['logo_upload']['#description'] = t('Your logo should be no greater than @logo_dimensions pixels. If instead you are uploading a full banner image and have unchecked "Site name" above, your image should be no greater than @banner_dimensions.', array('@logo_dimensions' => $logo_dimensions, '@banner_dimensions' => $banner_dimensions));

    $form['#submit'][] = 'ajax_logo_preview_theme_submit';
    
  }

}

function ajax_logo_preview_theme_submit($form, &$form_state) {

  $theme_var = $form_state['values']['var'];
  $key = variable_get('theme_default', 'garland');
  $theme_settings = theme_get_settings($key);

  if($form_state['values']['default_logo'] == 1) {
    $theme_settings['logo_path'] = '';	
  }

  $ajax_validators = array(
    'file_validate_is_image' => array(),
    'file_validate_image_resolution' => array(variable_get('ajax_logo_dimensions', '300x89')),
  );

  //upload the logo again because it may not have been uploaded prior to pressing submit
  if ($file = file_save_upload('logo_upload', $ajax_validators)) {
	// make sure tmp file exists.  someone may have renamed theirs.
    $tmp_path = file_directory_path() .'/'. variable_get('ajax_logo_path', 'ajax_logos') .'/tmp';
    file_check_directory($tmp_path, FILE_CREATE_DIRECTORY);

    $info = image_get_info($file->filepath);

    //resize the image because validators appear not to work all the time
    if($form_state['values']['toggle_name'] == 1) {
	  list($width, $height) = explode('x', variable_get('ajax_logo_dimensions', '300x89'));
    }
    else {
	  list($width, $height) = explode('x', variable_get('ajax_logo_dimensions_nositename', '983x89'));
    }
    
    if ($info['width'] > $width || $info['height'] > $height) {
      // Try to resize the image to fit the dimensions.
      if (image_get_toolkit() && image_scale($file->filepath, $file->filepath, $width, $height)) {
        clearstatcache();
        $info = image_get_info($file->filepath);
        $file->filesize = $info['file_size'];
      }
    }

    $destination = variable_get('ajax_logo_path', 'ajax_logos') .'/logo.'. $info['extension'];
    file_copy($file, $destination, FILE_EXISTS_REPLACE);

    $default_logo = (file_exists(file_directory_path() . '/' . variable_get('theme_default','garland') . '_logo.' . $info['extension'])) ? variable_get('theme_default','garland') . '_logo.' . $info['extension'] : 'logo.' . $info['extension'];
    file_copy($file, $default_logo, FILE_EXISTS_REPLACE);

  }

  variable_set($theme_var, $theme_settings);

  drupal_flush_all_caches();

}

/**
 * Implementation of hook_cron
 */
function ajax_logo_preview_cron() {
  // set path
  $path = file_directory_path() .'/'. variable_get('ajax_logo_path', 'ajax_logos') .'/tmp/';
  if(is_dir($path)) {
    // read pictures/tmp directory
    $handle = opendir($path);
    // loop through files and delete where the session doesn't currently exist
    while (false !== ($file = readdir($handle))) {
      // continue if the directory is current or down one
      if ($file == '.' || $file == '..') {
        continue;
      }
      // set the session id
      $sessionid = substr($file, 0, strpos($file, '.'));
      // lookup session id
      $result = db_query("SELECT count(*) FROM {sessions} WHERE sid='%s'", $sessionid);
      // set the number of results found
      $count = db_result($result);
      // remove file if session no longer exists
      if ($count == 0) {
        file_delete($path . $file);
      }
    }
    // close directory
    closedir($handle);
  }
}